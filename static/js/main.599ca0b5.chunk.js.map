{"version":3,"sources":["components/ContactsItem/ContactsItem.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/App.module.css","components/Alert/Alert.module.css","transition/alertTransition.module.css","transition/titleAnimation.module.css","transition/listTransition.module.css","transition/filterTransition.module.css","redux/reducerType.js","redux/phonebookReducer.js","redux/store.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","redux/phonebookAction.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactItems","createReducer","reducerType","state","payload","filter","contact","id","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","phonebookReducer","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","Alert","className","styles","alert","ContactForm","name","number","isActive","isShow","handleChange","e","setState","target","value","contactsVerification","props","some","submitForm","preventDefault","setTimeout","newContact","shortid","generate","getContact","this","CSSTransition","in","timeout","classNames","titleAnimation","unmountOnExit","form","onSubmit","alertTransition","inputField","type","placeholder","onChange","required","submitBtn","Component","ContactsItem","deleteContact","removeBtn","onClick","ContactsList","length","TransitionGroup","component","contactsList","map","listTransition","contactItem","defaultProps","Filter","filterInput","createAction","App","contactsFilter","toLowerCase","includes","container","filterTransition","mapDispatchToProps","phonebookAction","connect","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.599ca0b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactsItem_name__3EwAL\",\"removeBtn\":\"ContactsItem_removeBtn__3SY6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__-3u15\",\"contactItem\":\"ContactsList_contactItem__tVLDq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\",\"wrapper\":\"Filter_wrapper__IqOjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1rkHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alertTransition_enter__2GXi4\",\"enterActive\":\"alertTransition_enterActive__3uLrK\",\"exit\":\"alertTransition_exit__2X9Ha\",\"exitActive\":\"alertTransition_exitActive__WFA9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"titleAnimation_enter__2vBbk\",\"enterActive\":\"titleAnimation_enterActive__3d1kb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"listTransition_enter__1CPNS\",\"enterActive\":\"listTransition_enterActive__ZA___\",\"exit\":\"listTransition_exit__3-cQn\",\"exitActive\":\"listTransition_exitActive__30D_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filterTransition_enter__1CS66\",\"enterActive\":\"filterTransition_enterActive__1cN2f\",\"exit\":\"filterTransition_exit__UPx2y\",\"exitActive\":\"filterTransition_exitActive__1dBUc\"};","export default {\n  GET_CONTACT: 'contacts/GET_CONTACT',\n  DELETE_CONTACT: 'contacts/DELETE_CONTACT',\n  FILTER_INPUT: 'contacts/FILTER_INPUT',\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport reducerType from './reducerType';\n\nconst contactItems = createReducer([], {\n  [reducerType.GET_CONTACT]: (state, { payload }) => [...state, payload],\n  [reducerType.DELETE_CONTACT]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [reducerType.FILTER_INPUT]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contactItems,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebookReducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, phonebookReducer);\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistedReducer,\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport styles from './Alert.module.css';\n\nconst Alert = () => <p className={styles.alert}>Contact already exists!</p>;\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nimport Alert from '../Alert/Alert';\nimport alertTransition from '../../transition/alertTransition.module.css';\nimport titleAnimation from '../../transition/titleAnimation.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    getContact: PropTypes.func.isRequired,\n  };\n\n  state = { name: '', number: '', isActive: false, isShow: false };\n\n  componentDidMount() {\n    this.setState({ isShow: true });\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  contactsVerification = () => {\n    return this.props.contacts.some(contact => contact.name === this.state.name);\n  };\n\n  submitForm = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (this.contactsVerification()) {\n      this.setState({ isActive: true });\n      setTimeout(() => {\n        this.setState({ isActive: false });\n      }, 3000);\n    } else {\n      const newContact = { id: shortid.generate(), name, number };\n      this.props.getContact(newContact);\n\n      this.setState({ name: '', number: '' });\n    }\n  };\n\n  render() {\n    const { name, number, isActive, isShow } = this.state;\n    return (\n      <div>\n        <CSSTransition in={isShow} timeout={500} classNames={titleAnimation} unmountOnExit>\n          <h2 className=\"sectionTitle\">Phonebook</h2>\n        </CSSTransition>\n        <form className={styles.form} onSubmit={this.submitForm}>\n          <CSSTransition in={isActive} timeout={250} classNames={alertTransition} unmountOnExit>\n            <Alert />\n          </CSSTransition>\n\n          <label>\n            Name\n            <input\n              className={styles.inputField}\n              type=\"text\"\n              placeholder=\"Name...\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              className={styles.inputField}\n              placeholder=\"Tel...\"\n              type=\"text\"\n              value={number}\n              name=\"number\"\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <button className={styles.submitBtn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactsItem.module.css';\n\nconst ContactsItem = ({ contact: { id, name, number }, deleteContact }) => (\n  <>\n    <span className={styles.name}>{name}</span>\n    <span className={styles.number}>{number}</span>\n\n    <button className={styles.removeBtn} type=\"button\" id={id} onClick={() => deleteContact(id)}>\n      Delete\n    </button>\n  </>\n);\n\nContactsItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default ContactsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport ContactsItem from '../ContactsItem/ContactsItem';\nimport styles from './ContactsList.module.css';\nimport listTransition from '../../transition/listTransition.module.css';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  if (contacts.length) {\n    return (\n      <TransitionGroup component=\"ul\" className={styles.contactsList}>\n        {contacts.map(contact => (\n          <CSSTransition key={contact.id} timeout={500} unmountOnExit classNames={listTransition}>\n            <li className={styles.contactItem}>\n              <ContactsItem contact={contact} deleteContact={deleteContact} />\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n  return <h3>Contacts not found!</h3>;\n};\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filter, filterInput }) => (\n  <div className={styles.filterInput}>\n    <label>\n      Find contacts by name\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        placeholder=\"Add your search...\"\n        value={filter}\n        name=\"filter\"\n        onChange={e => filterInput(e.target.value)}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterInput: PropTypes.elementType.isRequired,\n};\n\nexport default Filter;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst getContact = createAction('contacts/GET_CONTACT');\nconst deleteContact = createAction('contacts/DELETE_CONTACT');\nconst filterInput = createAction('contacts/FILTER_INPUT');\n\nexport default { getContact, filterInput, deleteContact };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport styles from './App.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactsList from './ContactsList/ContactsList';\nimport Filter from './Filter/Filter';\nimport phonebookAction from '../redux/phonebookAction';\nimport filterTransition from '../transition/filterTransition.module.css';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n    filter: PropTypes.string.isRequired,\n    deleteContact: PropTypes.func.isRequired,\n    getContact: PropTypes.func.isRequired,\n    filterInput: PropTypes.func.isRequired,\n  };\n\n  contactsFilter = () => {\n    return this.props.contacts.filter(contact => contact.name.toLowerCase().includes(this.props.filter.toLowerCase()));\n  };\n\n  render() {\n    const { getContact, contacts, filter, filterInput, deleteContact } = this.props;\n    return (\n      <div className={styles.container}>\n        <ContactForm getContact={getContact} contacts={contacts} />\n\n        <h2 className=\"sectionTitle\">Contacts</h2>\n        <CSSTransition in={contacts.length > 1} timeout={250} classNames={filterTransition} unmountOnExit>\n          <Filter filter={filter} filterInput={filterInput} />\n        </CSSTransition>\n        <ContactsList contacts={this.contactsFilter()} deleteContact={deleteContact} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts.contactItems,\n    filter: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = {\n  getContact: phonebookAction.getContact,\n  deleteContact: phonebookAction.deleteContact,\n  filterInput: phonebookAction.filterInput,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"ContactForm_inputField__2qKkL\",\"form\":\"ContactForm_form__1fuOn\",\"submitBtn\":\"ContactForm_submitBtn__J-Qu6\"};"],"sourceRoot":""}